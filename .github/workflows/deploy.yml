name: Docker Build and Publish
on:
  push:
    branches:
      - development
      - staging
      - master

jobs:
  deploy:
    name: Docker Build and Publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["16.x"]
        environment: [development, staging, production]

    steps:
      - name: Check Secrets
        run: |
          if [ -z "${{ secrets.EC2_SSH_KEY }}" ]; then
            echo "Missing EC2 SSH key secret."
            exit 1
          fi
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "Missing Docker username secret."
            exit 1
          fi
          if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "Missing Docker password secret."
            exit 1
          fi
          if [ -z "${{ secrets.HOST_DNS }}" ]; then
            echo "Missing host DNS secret."
            exit 1
          fi
          if [ -z "${{ secrets.USERNAME }}" ]; then
            echo "Missing username secret."
            exit 1
          fi
          if [ -z "${{ secrets.TARGET_DIR }}" ]; then
            echo "Missing target directory secret."
            exit 1
          fi
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: make build-${{ matrix.environment }}
     
      - name: Publish Docker Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_IMAGE_NAME: next-app-env-${{ matrix.environment }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker tag $DOCKER_IMAGE_NAME $DOCKER_USERNAME/$DOCKER_IMAGE_NAME
          docker push $DOCKER_USERNAME/$DOCKER_IMAGE_NAME

      - name: Deploy to EC2
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          ARGS: "-rlgoDzvc -i --delete"
          SOURCE: "docker/${{ matrix.environment }}/docker-compose.yml"
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}
          EXCLUDE: ""
        with:
          SCRIPT_AFTER: |
            # SSH into the EC2 instance and run the commands
            ssh -i ${{ secrets.EC2_SSH_KEY }} ${{ secrets.USERNAME }}@${{ secrets.HOST_DNS }} "cd ${{ secrets.TARGET_DIR }} && \
              docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD && \
              docker pull $DOCKER_USERNAME/$DOCKER_IMAGE_NAME && \
              make start-${{ matrix.environment }}"
            